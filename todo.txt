CHANNELS
SqliteColumn(name=id, affinity=INTEGER, isNullable=true, inPrimaryKey=true)
SqliteColumn(name=channel_id, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=channel_name, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=channel_desc, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=channel_status, affinity=INTEGER, isNullable=true, inPrimaryKey=false)

NOTIFICATIONS
SqliteColumn(name=id, affinity=INTEGER, isNullable=true, inPrimaryKey=true)
SqliteColumn(name=sys_channel_id, affinity=INTEGER, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=sys_noti_id, affinity=INTEGER, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=title, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=message, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=msg_type, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=msg_src, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=msg_url, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=soundfile, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=active, affinity=INTEGER, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=created, affinity=INTEGER, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=expires, affinity=INTEGER, isNullable=true, inPrimaryKey=false)

PROFILE
SqliteColumn(name=id, affinity=INTEGER, isNullable=true, inPrimaryKey=true)
SqliteColumn(name=contact_id, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=user_name, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=email_address, affinity=TEXT, isNullable=true, inPrimaryKey=false)
SqliteColumn(name=contact_token, affinity=TEXT, isNullable=true, inPrimaryKey=false)

Android package name: com.notipievoicedrop.app


import appStateManager from './AppStateManager';

const processReceivedMessage = async (remoteMessage) => {
  if (remoteMessage.data) {
    const { channel_id, title, message } = remoteMessage.data;

    // Store data in the singleton
    appStateManager.set('channelId', channel_id);
    appStateManager.set('notificationTitle', title);
    appStateManager.set('notificationMessage', message);

    console.log('[FCMService] Data stored in AppStateManager:', appStateManager.getAll());
  }
};

WHEN THE APP IS IN THE FOREGROUND A NOTI WONT SHOW (ONLY WHEN APP IS IN BACKGROUND WILL IT BEHAVE LIKE A NORMAL NOTI)
You can use : npm install react-native-push-notification to show when app is in foreground.